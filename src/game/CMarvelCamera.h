#pragma once

#include "igVec3f.h"
#include "igVec4f.h"
#include "igMatrix44f.h"

class CMarvelCamera
{
public:
	void** field_0;//vtable
	igVec3f field_4;
	igVec3f field_16;
	igVec3f field_28;
	int field_40;
	int field_44;
	float field_48;
	igVec3f field_52;
	igVec3f field_64;
	float field_76;
	float field_80;
	int field_84;
	int field_88;
	int field_92;
	float field_96;
	float field_100;
	float field_104;
	short field_108;
	char field_110;//flags?
	char field_111;
	int field_112;
	int field_116;
	float field_120;
	float field_124;
	int field_128;
	int field_132;
	int field_136;
	int field_140;
	float field_144;
	int field_148;
	int field_152;
	igVec3f field_156;
	char field_168;//float
	char field_169;
	char field_170;
	char field_171;
	char field_172;//float
	char field_173;
	char field_174;
	char field_175;
	char field_176;//float
	char field_177;
	char field_178;
	char field_179;
	igVec3f field_180;
	char field_192;//byte
	char field_193;
	char field_194;
	char field_195;
	int field_196;
	igVec3f field_200;
	igVec3f field_212;
	igVec3f field_224;
	igVec3f field_236;
	igVec3f field_248;
	igVec3f field_260;
	igVec3f field_272;
	igVec3f field_284;
	igVec3f field_296;
	igVec3f field_308;
	igVec3f field_320;
	float field_332;
	float field_336;
	float field_340;
	float field_344;
	float field_348;//camera_stiff
	float field_352;
	float field_356;//camera_viewstiff
	float field_360;
	float field_364;
	int field_368;
	int field_372;
	float field_376;
	float field_380;//camera_dist
	float field_384;
	float field_388;
	float field_392;//camera_min
	float field_396;//camera_max
	float field_400;//1 / (max - min)
	float field_404;//camera_zoom_pitch
	igMatrix44f field_408;
	igMatrix44f field_472;
	igMatrix44f field_536;
	igMatrix44f field_600;
	igMatrix44f field_664;
	igVec3f field_728;
	igVec3f field_740;
	igVec3f field_752;
	float field_764;
	float field_768;
	float field_772;//camera_pitch
	float field_776;
	float field_780;//camera_pitch
	float field_784;
	int field_788;
	int field_792;
	int field_796;
	int field_800;
	int field_804;
	char field_808;
	char field_809;
	char field_810;
	char field_811;
	float field_812;//fov
	float field_816;//fov
	float field_820;
	int field_824;
	int field_828;
	int field_832;
	int field_836;
	int field_840;
	int field_844;
	int field_848;
	int field_852;
	float field_856;
	igVec3f field_860;
	igVec3f field_872;
	float field_884;
	char field_888;
	char field_889;
	char field_890;
	char field_891;
	char field_892;
	char field_893;
	char field_894;
	char field_895;
	char field_896;
	char field_897;
	char field_898;
	char field_899;
	char field_900;
	char field_901;
	char field_902;
	char field_903;
	char field_904;//vec3?
	char field_905;
	char field_906;
	char field_907;
	char field_908;
	char field_909;
	char field_910;
	char field_911;
	char field_912;
	char field_913;
	char field_914;
	char field_915;
	char field_916;
	char field_917;
	char field_918;
	char field_919;
	char field_920;
	char field_921;
	char field_922;
	char field_923;
	char field_924;
	char field_925;
	char field_926;
	char field_927;
	igVec3f field_928;
	char field_940;
	char field_941;
	char field_942;
	char field_943;
	char field_944;
	char field_945;
	char field_946;
	char field_947;
	char field_948;
	char field_949;
	char field_950;
	char field_951;
	igVec3f field_952;
	int field_964;
	char field_968;
	char field_969;
	char field_970;
	char field_971;
	char field_972;
	char field_973;
	char field_974;
	char field_975;
	char field_976;
	char field_977;
	char field_978;
	char field_979;
	int field_980;
	int field_984;
	int field_988;
	int field_992;
	int field_996;
	igMatrix44f field_1000;
	char field_1064;//byte
	char field_1065;
	char field_1066;
	char field_1067;
	float field_1068;
	char field_1072;
	char field_1073;
	char field_1074;
	char field_1075;
	char field_1076;
	char field_1077;
	char field_1078;
	char field_1079;
	char field_1080;
	char field_1081;
	char field_1082;
	char field_1083;
	igVec3f field_1084;
	int field_1096;
	int field_1100;
	igVec3f field_1104;
	int field_1116;
	int field_1120;
	int field_1124;
	int field_1128;
	int field_1132;
	int field_1136;
	int field_1140;
	int field_1144;
	int field_1148;
	int field_1152;
	int field_1156;
	int field_1160;
	int field_1164;
	int field_1168;
	int field_1172;
	int field_1176;
	int field_1180;
	int field_1184;
	int field_1188;
	float field_1192;
	short field_1196;
	char field_1198;
	char field_1199;
	igVec3f field_1200;
	int field_1212;
	float field_1216;
	float field_1220;
	int field_1224;
	int field_1228;
	char field_1232;
	char field_1233;
	char field_1234;
	char field_1235;
	char field_1236;
	char field_1237;
	char field_1238;
	char field_1239;
	char field_1240;
	char field_1241;
	char field_1242;
	char field_1243;
	igVec3f field_1244;
	float field_1256;
	float field_1260;
	float field_1264;
	float field_1268;
	float field_1272;
	float field_1276;
	int field_1280;
	char field_1284;
	char field_1285;
	char field_1286;
	char field_1287;
	float field_1288;
	float field_1292;
	float field_1296;
	int field_1300;
	char field_1304;
	char field_1305;
	char field_1306;
	char field_1307;
	char field_1308;
	char field_1309;
	char field_1310;
	char field_1311;
	char field_1312;
	char field_1313;
	char field_1314;
	char field_1315;
	igVec3f field_1316;
	char field_1328;//flags1 (2 - free camera, 4 - camera_freeview, 8 - camera_freeview_paused, 32 - camera_fade)
	char field_1329;//flags2
	char field_1330;//flags3
	char field_1331;

	bool sub_4DF1E0();//is free camera enabled
	int sub_4D8F00();//toggle free camera
	bool sub_4DF130();//freeview enabled
	bool sub_4DF140(bool a2);//set freeview
	bool sub_4DF170();//freeview paused
	bool sub_4DF180(bool a2);//set pause freeview
	int sub_4DF240();
};

static_assert(sizeof(CMarvelCamera) == 1332, "Invalid structure size of CMarvelCamera");

CMarvelCamera* TheCamera();